CHIP DecoderSegment201837629 {
    IN A, B, C, D;  // Inputs: 4-bit binary
    OUT g;          // Output: segment g

    PARTS:
    // NOT gates
    Not(in=A, out=NotA);
    Not(in=B, out=NotB);
    Not(in=C, out=NotC);
    Not(in=D, out=NotD);

    // AND gates for each term in the Boolean expression
    And(a=NotA, b=C, out=Term1);         // A'C
    And(a=B, b=C, out=Term2);            // BC
    And(a=NotB, b=NotD, out=Term3);      // B'D'
    
    // For three-input AND gates, use two AND gates
    And(a=A, b=NotB, out=Intermediate1); // A and NotB
    And(a=Intermediate1, b=NotC, out=Term4); // AB'C'
    
    And(a=NotA, b=B, out=Intermediate2); // A' and B
    And(a=Intermediate2, b=D, out=Term5); // A'BD

    And(a=A, b=NotC, out=Intermediate3); // A and NotC
    And(a=Intermediate3, b=NotD, out=Term6); // AC'D'

    // OR gates to combine terms (chain for more than 2 inputs)
    Or(a=Term1, b=Term2, out=Partial1);       // Combine Term1 and Term2
    Or(a=Partial1, b=Term3, out=Partial2);    // Combine Partial1 and Term3
    Or(a=Term4, b=Term5, out=Partial3);       // Combine Term4 and Term5
    Or(a=Partial3, b=Term6, out=Partial4);    // Combine Partial3 and Term6
    Or(a=Partial2, b=Partial4, out=g);        // Final output g
}